/*
Copyright 2023.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	leaderworkersetv1 "sigs.k8s.io/lws/api/leaderworkerset/v1"
)

// LeaderWorkerSetSpecApplyConfiguration represents a declarative configuration of the LeaderWorkerSetSpec type for use
// with apply.
type LeaderWorkerSetSpecApplyConfiguration struct {
	Replicas             *int32                                  `json:"replicas,omitempty"`
	LeaderWorkerTemplate *LeaderWorkerTemplateApplyConfiguration `json:"leaderWorkerTemplate,omitempty"`
	RolloutStrategy      *RolloutStrategyApplyConfiguration      `json:"rolloutStrategy,omitempty"`
	StartupPolicy        *leaderworkersetv1.StartupPolicyType    `json:"startupPolicy,omitempty"`
	NetworkConfig        *NetworkConfigApplyConfiguration        `json:"networkConfig,omitempty"`
	GroupPlacementPolicy *GroupPlacementPolicyApplyConfiguration `json:"groupPlacementPolicy,omitempty"`
}

// LeaderWorkerSetSpecApplyConfiguration constructs a declarative configuration of the LeaderWorkerSetSpec type for use with
// apply.
func LeaderWorkerSetSpec() *LeaderWorkerSetSpecApplyConfiguration {
	return &LeaderWorkerSetSpecApplyConfiguration{}
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *LeaderWorkerSetSpecApplyConfiguration) WithReplicas(value int32) *LeaderWorkerSetSpecApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithLeaderWorkerTemplate sets the LeaderWorkerTemplate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LeaderWorkerTemplate field is set to the value of the last call.
func (b *LeaderWorkerSetSpecApplyConfiguration) WithLeaderWorkerTemplate(value *LeaderWorkerTemplateApplyConfiguration) *LeaderWorkerSetSpecApplyConfiguration {
	b.LeaderWorkerTemplate = value
	return b
}

// WithRolloutStrategy sets the RolloutStrategy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RolloutStrategy field is set to the value of the last call.
func (b *LeaderWorkerSetSpecApplyConfiguration) WithRolloutStrategy(value *RolloutStrategyApplyConfiguration) *LeaderWorkerSetSpecApplyConfiguration {
	b.RolloutStrategy = value
	return b
}

// WithStartupPolicy sets the StartupPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartupPolicy field is set to the value of the last call.
func (b *LeaderWorkerSetSpecApplyConfiguration) WithStartupPolicy(value leaderworkersetv1.StartupPolicyType) *LeaderWorkerSetSpecApplyConfiguration {
	b.StartupPolicy = &value
	return b
}

// WithNetworkConfig sets the NetworkConfig field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NetworkConfig field is set to the value of the last call.
func (b *LeaderWorkerSetSpecApplyConfiguration) WithNetworkConfig(value *NetworkConfigApplyConfiguration) *LeaderWorkerSetSpecApplyConfiguration {
	b.NetworkConfig = value
	return b
}

// WithGroupPlacementPolicy sets the GroupPlacementPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GroupPlacementPolicy field is set to the value of the last call.
func (b *LeaderWorkerSetSpecApplyConfiguration) WithGroupPlacementPolicy(value *GroupPlacementPolicyApplyConfiguration) *LeaderWorkerSetSpecApplyConfiguration {
	b.GroupPlacementPolicy = value
	return b
}
